<Project Sdk="Godot.NET.Sdk/4.5.0">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <!-- Avoid picking up C# files from nested projects like ShimGen/Annotations -->
    <EnableDefaultItems>false</EnableDefaultItems>
  <!-- Local dev fallback: if CI doesn't pass ShimGenPackageVersion, use a floating version to get the latest 0.x.y -->
  <ShimGenPackageVersion Condition="'$(ShimGenPackageVersion)'==''">0.*</ShimGenPackageVersion>
    <!-- Ensure shims are generated even if CoreCompile is up-to-date in Godot builds -->
    <BuildDependsOn>EnsureShims;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <!-- Keep paths EXACTLY as they are on disk -->
    <ProjectReference Include="FSharp\\FsharpWithShim.FSharp.fsproj">
      <!-- Reference for compile so generated shims can see F# types, but do not copy to output. -->
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup>
  <PackageReference Include="Headsetsniper.Godot.FSharp.ShimGen" Version="$(ShimGenPackageVersion)">
      <!-- Prevent any assemblies/resources from flowing into compile/runtime/output -->
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>build;buildTransitive</IncludeAssets>
    </PackageReference>
    <!-- When developing locally (targets present in repo), exclude package's build assets to avoid duplicate targets. -->
    <PackageReference Update="Headsetsniper.Godot.FSharp.ShimGen"
                      Condition="Exists('ShimGen\buildTransitive\Headsetsniper.Godot.FSharp.ShimGen.targets')">
      <ExcludeAssets>build;buildTransitive</ExcludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- IDE design-time helper is provided by the Headsetsniper.Godot.FSharp.ShimGen package's buildTransitive target. -->

  <!-- Explicitly include only our gameplay source trees at evaluation time -->
  <ItemGroup>
    <Compile Include="Scenes\**\*.cs" />
    <Compile Include="Scripts\**\*.cs" Exclude="Scripts\Generated\**\*.cs" />
  </ItemGroup>

  <!-- Development convenience: if a locally built ShimGen exists, use it instead of the packaged one. -->
  <PropertyGroup>
    <_LocalShimGenDll>$(MSBuildProjectDirectory)\ShimGen\bin\$(Configuration)\$(TargetFramework)\Headsetsniper.Godot.FSharp.ShimGen.dll</_LocalShimGenDll>
    <ShimGenDll Condition="Exists('$(_LocalShimGenDll)')">$(_LocalShimGenDll)</ShimGenDll>
  </PropertyGroup>

  <!-- Development convenience: import local targets so GenerateFSharpShims is available even before packing the NuGet. -->
  <Import Project="ShimGen\buildTransitive\Headsetsniper.Godot.FSharp.ShimGen.targets"
          Condition="Exists('ShimGen\buildTransitive\Headsetsniper.Godot.FSharp.ShimGen.targets')" />

  <!-- Ensure the package's GenerateFSharpShims target runs as part of Build -->
  <Target Name="EnsureShims" DependsOnTargets="GenerateFSharpShims" />
</Project>
